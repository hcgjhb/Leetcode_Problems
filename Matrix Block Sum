class Solution {
public:
    int get_sum(vector<vector<int>>& mat, int rows_range1, int rows_range2, int cols_range1, int cols_range2)
    {
        int sum=0;
        for(int i=rows_range1;i<=rows_range2;i++)
        {
            for(int j=cols_range1;j<=cols_range2;j++)
                sum+=mat[i][j];
        }
        return sum;
    }
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
        vector<vector<int>> ans;
        int rows = mat.size();
        int cols = mat[0].size();
        for(int i=0;i<rows;i++)
        {
            int rows_range1 = i-k;
            if(rows_range1<0)
                rows_range1=0;
            int rows_range2 = i+k;
            if(rows_range2>=rows)
                rows_range2=rows-1;
            int j=0;
            vector<int> temp;
            while(j!=cols)
            {
                int cols_range1 = j-k;
                if(cols_range1<0)
                    cols_range1=0;
                int cols_range2 = j+k;
                if(cols_range2>=cols)
                    cols_range2=cols-1;
                int a=get_sum(mat, rows_range1, rows_range2, cols_range1, cols_range2);
                temp.push_back(a);
                j++;
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
