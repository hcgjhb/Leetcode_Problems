class Solution {
public:

    void insert(vector<vector<int>>& ans, vector<int> &temp, int i, int j)
    {
        int size=temp.size();
        for(int k=0;k<size;k++)
        {
            ans[i][j]=temp[k];
            i++; j++;
        }
    }
    
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        int rows=mat.size();
        int cols=mat[0].size();
        vector<vector<int>> ans(rows, vector<int> (cols));
        for(int i=0;i<rows;i++)
        {
            vector<int> temp;
            int k=i;
            int j=0;
            for(j, k;j<cols && k<rows;j++, k++)
            {
                temp.push_back(mat[k][j]);
            }
            k=i; j=0;
            sort(temp.begin(), temp.end());
            insert(ans, temp, k, j);
        }
        for(int j=1;j<cols;j++)
        {
            vector<int> temp;
            int k=j, i=0;
            for(i, k;i<rows && k<cols;i++, k++)
            {
                temp.push_back(mat[i][k]);
            }
            k=j; i=0;
            sort(temp.begin(), temp.end());
            insert(ans, temp, i, k);  
        }
        return ans;
    }
};
